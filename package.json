{
  "name": "regav-ai-scalping-bot",
  "version": "1.0.0",
  "description": "High-frequency scalping trading bot for Recall hackathon using Vincent policy governance and Gaia AI analysis",
  "type": "module",
  "main": "src/index.js",
  "author": "RegAV-AI Team",
  "license": "MIT",
  "keywords": [
    "trading",
    "scalping",
    "cryptocurrency",
    "ai",
    "blockchain",
    "recall",
    "vincent",
    "gaia",
    "hackathon"
  ],
  "scripts": {
    "start": "node src/index.js",
    "start:recall": "node start-recall-agent.js",
    "dev": "node --watch src/index.js",
    "dev:recall": "node --watch start-recall-agent.js",
    "test": "node --test test/**/*.test.js",
    "test:watch": "node --test --watch test/**/*.test.js",
    "lint": "eslint src/ test/",
    "lint:fix": "eslint src/ test/ --fix",
    "format": "prettier --write src/ test/",
    "build": "echo 'No build step required for Node.js project'",
    "deploy": "vercel --prod",
    "deploy:preview": "vercel",
    "vercel-build": "echo 'Build step for Vercel'",
    "validate": "npm run lint && npm run test",
    "competition": "NODE_ENV=production npm run start:recall",
    "sandbox": "NODE_ENV=development RECALL_NETWORK=testnet npm run start:recall",
    "verify-account": "node src/scripts/verify-recall-account.js",
    "encrypt-keys": "node scripts/encrypt-keys.js",
    "setup": "node scripts/setup.js",
    "check-env": "node scripts/check-environment.js"
  },
  "dependencies": {
    "@lit-protocol/lit-node-client": "^7.2.0",
    "@lit-protocol/vincent-app-sdk": "^1.0.2",
    "@modelcontextprotocol/sdk": "^1.15.0",
    "@recallnet/agent-toolkit": "^0.0.8",
    "axios": "^1.6.0",
    "dotenv": "^16.6.1",
    "ethers": "^6.15.0",
    "joi": "^17.13.3",
    "technicalindicators": "^3.1.0",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.9.0",
    "eslint": "^8.54.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-n": "^16.3.1",
    "eslint-plugin-promise": "^6.1.1",
    "nodemon": "^3.0.1",
    "prettier": "^3.1.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/regav-ai/scalping-bot.git"
  },
  "bugs": {
    "url": "https://github.com/regav-ai/scalping-bot/issues"
  },
  "homepage": "https://github.com/regav-ai/scalping-bot#readme",
  "funding": {
    "type": "hackathon",
    "url": "https://recall.network"
  },
  "config": {
    "competition": {
      "duration": 3600000,
      "target_trades": 50,
      "target_profit": 0.25,
      "max_loss": 0.05
    },
    "trading": {
      "pairs": [
        "BTC/USDT",
        "ETH/USDT",
        "SOL/USDC"
      ],
      "interval": 5000,
      "max_concurrent": 3
    }
  },
  "eslintConfig": {
    "extends": [
      "standard"
    ],
    "env": {
      "node": true,
      "es2022": true
    },
    "parserOptions": {
      "ecmaVersion": 2022,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn",
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "semi": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "single"
      ]
    },
    "overrides": [
      {
        "files": [
          "test/**/*.js"
        ],
        "env": {
          "jest": true
        },
        "globals": {
          "describe": "readonly",
          "test": "readonly",
          "expect": "readonly",
          "beforeEach": "readonly",
          "afterEach": "readonly",
          "beforeAll": "readonly",
          "afterAll": "readonly"
        }
      }
    ]
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "printWidth": 100
  },
  "nodemonConfig": {
    "watch": [
      "src/"
    ],
    "ext": "js,json",
    "ignore": [
      "node_modules/",
      "logs/",
      "data/"
    ],
    "env": {
      "NODE_ENV": "development"
    }
  },
  "directories": {
    "test": "test"
  }
}
